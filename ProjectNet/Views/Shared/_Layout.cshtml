@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor

@{
    // Determine if we're on Login or Register so we can hide the navbar there
    var currentController = ViewContext.RouteData.Values["controller"]?.ToString() ?? string.Empty;
    var currentAction = ViewContext.RouteData.Values["action"]?.ToString() ?? string.Empty;
    var showNavbar = !(currentController == "Account" &&
                       (currentAction == "Login" || currentAction == "Register"));

    // Read theme from cookie (defaults to light)
    var theme = HttpContextAccessor.HttpContext.Request.Cookies["theme"] ?? "light";
    var oppositeTheme = theme == "light" ? "dark" : "light";
}

<!DOCTYPE html>
<html lang="en" class="@theme">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - ProjectNet</title>  

    <!-- Bootstrap CSS for layout & utilities -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <!-- Your custom variables & overrides -->
    <link href="~/css/site.css" rel="stylesheet" />

    @* Optional page-specific styles *@
    @RenderSection("Styles", required: false)
</head>
<body>
    @if (showNavbar)
    {
        <nav class="navbar py-2" style="background-color: var(--bg); color: var(--fg);">
            <div class="container-fluid d-flex justify-content-between align-items-center">
                <!-- Far left: Theme toggle -->
                <form asp-controller="Home"  asp-action="ToggleTheme" class="mb-0" method="post">
                    <input type="hidden" name="theme" value="@oppositeTheme" />
                    <button type="submit" class="btn btn-outline-secondary btn-sm">
                        @oppositeTheme.ToUpper() Mode
                    </button>
                </form>

                <!-- Far right: Logout -->
                <form asp-controller="Account" asp-action="Logout" method="post" class="mb-0">
                    <button type="submit" class="btn btn-outline-danger btn-sm">
                        Logout
                    </button>
                </form>
            </div>
        </nav>
    }

    <div class="container my-5">
        @* This is critical — without it, none of your page content will render *@
        @RenderBody()
    </div>
    @* Optional page-specific scripts *@
    @RenderSection("Scripts", required: false)
</body>
</html>

@section Scripts {
    <script>
        const chatHistory = document.querySelector('.chat-history');
        function scrollToBottom() {
          chatHistory.scrollTop = chatHistory.scrollHeight;
        }

        // 1) on load
        window.addEventListener('load', scrollToBottom);

        // 2) whenever children change
        if (chatHistory) {
          new MutationObserver(scrollToBottom)
            .observe(chatHistory, { childList: true });
        }
    </script>
}
